- hosts: all
  connection: httpapi
  tasks:
    # INTERFACES
    - name: Outside Interface
      ftd_configuration:
        operation: upsertPhysicalInterface
        data:
          name: outside
          hardwareName: GigabitEthernet0/1
          monitorInterface: True
          ipv4:
            addressNull: False
            defaultRouteUsingDHCP: False
            dhcp: False
            ipAddress:
              ipAddress: 10.0.0.10
              netmask: 255.255.255.0
              standbyIpAddress: null
              type: haipv4address
            ipType: STATIC
            type: interfaceipv4
          mtu: 1500
          enabled: True
          mode: ROUTED
          type: physicalinterface
        register_as: "outside_int"
      register: return

    - name: Inside Interface
      ftd_configuration:
        operation: upsertPhysicalInterface
        data:
          name: inside
          hardwareName: GigabitEthernet0/0
          monitorInterface: True
          ipv4:
            addressNull: False
            defaultRouteUsingDHCP: False
            dhcp: False
            ipAddress:
              ipAddress: 10.0.1.10
              netmask: 255.255.255.0
              standbyIpAddress: null
              type: haipv4address
            ipType: STATIC
            type: interfaceipv4
          mtu: 1500
          enabled: True
          mode: ROUTED
          type: physicalinterface
        register_as: "inside_int"
      register: return

    # NETWORK OBJECTS
    - name: Remote Site Host
      ftd_configuration:
        operation: 'upsertNetworkObject'
        data:
          name: "remote_site"
          description: "remote host"
          subType: "HOST"
          value: "100.11.24.44"
          type: "networkobject"

    - name: K8s Cluster Host
      ftd_configuration:
        operation: 'upsertNetworkObject'
        data:
          name: "K8s_Cluster"
          description: "Kubernetes Cluster"
          subType: "HOST"
          value: "10.0.1.100"
          type: "networkobject"
        register_as: "K8s_Cluster"
      register: return
    - debug:
        var: K8s_Cluster

    - name: K8s Nat Host
      ftd_configuration:
        operation: 'upsertNetworkObject'
        data:
          name: "K8s_ext"
          description: "Kubernetes Cluster Nat address"
          subType: "HOST"
          value: "10.0.0.11"
          type: "networkobject"
        register_as: "K8s_ext"
      register: return
    - debug:
        var: K8s_ext

  # SERVICE OBJECTS
    - name: K8s API Port
      ftd_configuration:
        operation: 'upsertTCPPortObject'
        data:
          name: "k8s_api"
          description: "Kubernetes API port"
          port: "16443"
          type: "tcpportobject"
        register_as: "k8s_api"
      register: return
    - name: My-Python-App Port
      ftd_configuration:
        operation: 'upsertTCPPortObject'
        data:
          name: "my-python-app"
          description: "my-python-app service-node port"
          port: "16443"
          type: "tcpportobject"
        register_as: "my-python-app"
      register: return

    # NETWORK ADDRESS TRANSLATION
    - name: Get Object NAT Policy
      ftd_configuration:
        operation: getObjectNatRuleContainerList
        register_as: container_results
      register: return
    - debug:
        var: container_results

    - name: K8S CLUSTER NAT
      ftd_configuration:
        operation: "upsertObjectNatRule"
        data:
          name: "K8s_Nat"
          sourceInterface:
            name: "inside"
            hardwareName: "GigabitEthernet0/0"
            id: "{{ inside_int[0].id }}"
            type: "physicalinterface"
          destinationInterface:
            name: "outside"
            hardwareName: "GigabitEthernet0/1"
            id: "{{ outside_int[0].id }}"
            type: "physicalinterface"
          natType: "STATIC"
          enabled: "true"
          originalNetwork:
            name: "K8s_Cluster"
            id: "{{ K8s_Cluster.id }}"
            type: "networkobject"
          translatedNetwork:
            name: "K8s_Cluster"
            id: "{{ K8s_ext.id }}"
            type: "networkobject"
          type: "objectnatrule"
        path_params:
          parentId: "{{ container_results[0].id}}"
